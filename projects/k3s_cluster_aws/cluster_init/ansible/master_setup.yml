- name: Launch Master Node
  hosts: master_public
  become: true
    
  tasks:
    - name: Read master IP from hosts.ini
      shell: "awk '/^\\[master_public\\]/{getline; print}' hosts.ini | cut -d ' ' -f 1"
      register: master_ip_result

    - set_fact:
        master_ip_public: "{{ master_ip_result.stdout.strip() }}"
        
    - name: Stop K3s service
      command: "systemctl stop k3s"
      ignore_errors: true
        
    - name: Run k3s-killall.sh script
      command: "/usr/local/bin/k3s-killall.sh"
      ignore_errors: true

    - name: Generate K3s token
      shell: openssl rand -hex 16
      register: k3s_token_result
      changed_when: false

    - set_fact:
        k3s_token: "{{ k3s_token_result.stdout }}"
    
    - name: Save K3s token
      copy:
        content: "{{ k3s_token }}"
        dest: "{{ playbook_dir }}/k3s_token.txt"

    - name: Update apt and install dependencies
      apt:
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common

    - name: Run K3s installation script
      shell: "curl -sfL https://get.k3s.io | sh -"

    - name: Install and configure K3s master node
      become: true
      command: "k3s server --disable=traefik,servicelb --tls-san={{ master_ip_public }} --token={{ k3s_token }} &"
      args:
        creates: "/etc/systemd/system/k3s.service"

    - name: Show kubeconfig in the terminal
      become: true
      shell: cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig_content

    - name: Print kubeconfig content
      debug:
        msg: "{{ kubeconfig_content.stdout }}"
        
    - name: Convert YAML content to JSON
      set_fact:
        kubeconfig_json: "{{ kubeconfig_content.stdout | from_yaml | to_json }}"    
        
    - name: Convert JSON back to formatted YAML
      set_fact:
        formatted_yaml: "{{ kubeconfig_json | from_json | to_yaml | replace(\"'\", '') }}"      
        
    - name: Write formatted YAML to remote-cluster.conf in current folder
      copy:
        content: "{{ formatted_yaml }}"
        dest: remote-cluster.conf
      delegate_to: localhost

    - name: Save kubeconfig content to ~/.kube/remote-cluster.conf
      copy:
        content: "{{ formatted_yaml }}"
        dest: "~/.kube/remote-cluster.conf"
      delegate_to: localhost
  		
    - name: Export KUBECONFIG on local host
      shell: export KUBECONFIG=~/.kube/remote-cluster.conf
      delegate_to: localhost

