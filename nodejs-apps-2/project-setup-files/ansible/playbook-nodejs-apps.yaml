---
- name: Install and Run NodeJS Apps
  hosts: all
  become: true
  vars:
    node_version: "16.x"
    apps:
      - name: "battleships"
        directory: "/opt/battleships_app"
        entry_point: "server.js"
        domain: "dummy_domain_name"
        port: 3000
      - name: "dadjokes"
        directory: "/opt/dadjokes_app"
        entry_point: "server.js"
        domain: "dummy_domain_name"
        port: 3001

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Add NodeSource repository
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ node_version }} {{ ansible_distribution_release }} main"
        state: present
        update_cache: yes

    - name: Install Node.js
      apt:
        name: nodejs
        state: latest

    - name: Install PM2 with NPM
      npm:
        name: pm2
        global: yes
      tags: pm2

    - name: Set PM2 to start on boot
      systemd:
        name: pm2
        enabled: yes
        state: started
        daemon_reload: yes
      tags: pm2

    - name: Deploy applications to the remote server
      block:
        - name: Copy application code to the remote server
          copy:
            src: "../../{{ item.name }}"
            dest: "{{ item.directory }}"
            owner: ubuntu
            group: ubuntu
            mode: '0755'
          loop: "{{ apps }}"
          loop_control:
            label: "{{ item.name }}"

        - name: Install Node.js application dependencies
          shell: cd "{{ item.directory }}/{{ item.name }}" && npm install
          loop: "{{ apps }}"
          loop_control:
            label: "{{ item.name }}"

        - name: Start or restart the application using PM2
          ansible.builtin.command:
            cmd: pm2 start {{ item.entry_point }} --name "{{ item.name }}" -f
            chdir: "{{ item.directory }}/{{ item.name }}"
          loop: "{{ apps }}"
          loop_control:
            label: "{{ item.name }}"
  handlers:
    - name: save pm2 state
      ansible.builtin.command: pm2 save

