<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2175.v76a_fff0a_2618"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2175.v76a_fff0a_2618">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>1</daysToKeep>
        <numToKeep>1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3867.v535458ce43fd">
    <script>pipeline {
    agent any

    stages {        
        stage(&apos;Terraform destroy state&apos;) {
            steps {
                script {
                    dir(&quot;../simple-webpage-deploy/simple-webpage/scripts&quot;) {
                        sh &apos;ls -l&apos; // List files in the directory for debugging
                        
                        // Check if tf-cleanup.sh file exists before attempting to change permissions
                        if (fileExists(&apos;tf-cleanup.sh&apos;)) {
                            sh &apos;chmod +x tf-cleanup.sh&apos; // Ensure script is executable
                            sh &apos;./tf-cleanup.sh&apos; // Execute the script
                        } else {
                            echo &quot;Error: tf-cleanup.sh file not found.&quot;
                            // You can choose to exit the stage here or handle the error accordingly
                        }
                    }
                }
            }
        }
        
        stage(&apos;Clean Up &quot;simple-webpage-deploy&quot; project&apos;) {
            steps {
                dir(&quot;../simple-webpage-deploy&quot;) {
                    deleteDir()
                }
            }
        }
        
        stage(&apos;Clean Up &quot;simple-webpage-destroy&quot; project&apos;) {
            steps {
                dir(&quot;../simple-webpage-destroy&quot;) {
                    deleteDir()
                }
                dir(&quot;../simple-webpage-deploy@tmp&quot;) {
                    deleteDir()
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>