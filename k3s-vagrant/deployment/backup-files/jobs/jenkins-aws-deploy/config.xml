<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2175.v76a_fff0a_2618"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2175.v76a_fff0a_2618">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>1</daysToKeep>
        <numToKeep>1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3867.v535458ce43fd">
    <script>pipeline {
    agent any
    
    environment {
        GIT_REPO =          &apos;git@github.com:developer-vs/devops.git&apos;
        GIT_CREDENTIALS =   &apos;Github&apos;
        TF_DIRECTORY_S3 =   &apos;jenkins_in_docker_on_aws/project-setup-files/terraform_s3&apos;
        TF_DIRECTORY =      &apos;jenkins_in_docker_on_aws/project-setup-files/terraform&apos;
        ANSIBLE_DIRECTORY = &apos;jenkins_in_docker_on_aws/project-setup-files/ansible&apos;
    }

    stages {
        stage(&apos;Clone Git repo&apos;) {
            steps {
                deleteDir()
                checkout([$class: &apos;GitSCM&apos;,
                  branches: [[name: &apos;dev&apos;]],
                        userRemoteConfigs: [[
                        credentialsId: &quot;${GIT_CREDENTIALS}&quot;,
                        url: &quot;${GIT_REPO}&quot;]],
                        extensions: [[$class: &apos;SparseCheckoutPaths&apos;,
                                    sparseCheckoutPaths: [[path: &apos;jenkins_in_docker_on_aws&apos;]]]]])
            }
        }
        
        stage(&apos;Check Terraform&apos;) {
            steps {
                sh &apos;terraform --version&apos;
            }
        }
        
        stage(&apos;Setup S3 Bucket&apos;) {
            steps {
                dir(&quot;${TF_DIRECTORY_S3}&quot;) {
                    script {
                        sh &apos;./setup_s3_bucket.sh&apos;                        
                    }
                }
            }
        }
        
        stage(&apos;Setup Project&apos;) {
            steps {
                dir(&quot;${TF_DIRECTORY}&quot;) {
                    script {
                        sh &apos;./setup-project.sh&apos;                        
                    }
                }
            }
        }
        
        stage(&apos;Check Ansible&apos;) {
            steps {
                sh &apos;ansible --version&apos;
            }
        }
        
        stage(&apos;Deploy Docker&apos;) {
            steps {
                dir(&quot;${ANSIBLE_DIRECTORY}&quot;) {
                    script {
                        sh &apos;ansible-playbook deploy-docker.yml&apos;                        
                    }
                }
            }
        }
        
        stage(&apos;Deploy Jenkins&apos;) {
            steps {
                dir(&quot;${ANSIBLE_DIRECTORY}&quot;) {
                    script {
                        sh &apos;ansible-playbook deploy-jenkins.yml&apos;                        
                    }
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>